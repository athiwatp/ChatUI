@import "./base/value.scss";
@each $theme, $value in $theme_color {
  .theme-#{$theme} {
    color: map-get($value, color);
    background: map-get($value, color_background);
    .chat-header {
      color: map-get($value, color_tit);
      background-color: map-get($value, color_tit_bg);
      @each $g in map-values(map-get($value, color_tit_gradient_bg)) {
        background-image: $g;
      }
    }
    .chat-cell {
      .msg, .time {
        color: map-get($value, color_cell_sub_text);
      }
      &:nth-child(n+2):before {
        background: map-get($value, color_cell_line);;
      }
      &:active {
        background: map-get($value, color_cell_bg_active);
      }
    }
    .chat-dialog {
      background: map-get($value, color_dialog_bg);
      .title {
        color: map-get($value, color_dialog_tit);
        background: map-get($value, color_dialog_tit_bg);
      }
      .content {
        input {
          color: map-get($value, color_dialog_input);
          border-bottom-color:  map-get($value, color_dialog_input_border);
        }
      }
      .btns button {
        background: map-get($value, color_dialog_btn_bg);
        color: map-get($value, color_dialog_btn);
        & + button {
          border-left-color: map-get($value, color_dialog_btn_line);
        }
        &:active {
          background: map-get($value, color_dialog_btn_bg_active);
        }
      }
    }
    .chat-area {
      .content .msg-content {
        .msg-wrap {
          color: map-get($value, color_bubble_other);
          background: map-get($value, color_bubble_other_bg);
          border-color: map-get($value, color_bubble_other_border);
          @if $theme == pink or $theme == dark or $theme == gold {
            box-shadow: none;
          }
          &:before {
            border-right-color: map-get($value, color_bubble_other_bg);
          }
          &:after {
            border-right-color: map-get($value, color_bubble_other_border);
          }
        }
        .own .msg-wrap {
          color: map-get($value, color_bubble_own);
          background: map-get($value, color_bubble_own_bg);
          &:before {
            border-left-color: map-get($value, color_bubble_own_bg);
          }
          &:after {
            border-left-color: map-get($value, color_bubble_own_border);
          }
        }
      }
      .pre-bottom {
        background: map-get($value, color_persend_bg);
        border-top-color: map-get($value, color_persend_border);
        input {
          color: map-get($value, color_persend_input);
          background: map-get($value, color_persend_input_bg);
          border-color: map-get($value, color_persend_input_border);
          &:focus {
            background: map-get($value, color_persend_input_active);
            border-color: map-get($value, color_persend_input_border_active);
          }
        }
        button {
          background: map-get($value, color_presend_btn_bg);
          @if $theme == dark or $theme == gold {
            &:active:after {
              opacity: 0;
            }
          }
          i {
            color: map-get($value, color_presend_btn);
          }
          &.disable {
            background: map-get($value, color_presend_btn_bg_disable)!important;
            i {
              color: map-get($value, color_presend_btn_disable)!important;
            }
          }
          &:active {
            background: map-get($value, color_presend_btn_bg_active);
          }
        }
      }
    }
    .pop-bubble {
      background: map-get($value, color_pop_bubble_bg);
      box-shadow: map-get($value, shadow_pop_bubble);
      .iconfont {
        color: map-get($value, color_pop_bubble);
      }
      &:active {
        background: map-get($value, color_pop_bubble_bg_active);
        .iconfont {
          color: map-get($value, color_pop_bubble_active);
        }
      }
    }
    .overview {
      background: map-get($value, color_overview_bg);
      .top {
        .title {
          color: map-get($value, color_overview_tit);
        }
        .avatar {
          box-shadow: map-get($value, shadow_overview_avatar);
        }
        .display-name {
          color: map-get($value, color_overview_displayname);
        }
      }
      .top .title .menus {
        color: map-get($value, color_overview_cell);
        background: map-get($value, color_overview_cell_bg);
        li {
          &:active {
            background: map-get($value, color_overview_cell_bg_active);
          }
          + li {
            border-top-color: map-get($value, color_overview_cell_line);
          }
        }
      }
      table {
        color: map-get($value, color_overview_cell);
        background: map-get($value, color_overview_cell_bg);
        tr:active {
          background: map-get($value, color_overview_cell_bg_active);
        }
        tr:nth-child(n+2) {
          border-color: map-get($value, color_overview_cell_line);
        }
      }       
    }
  }
}
.theme-dark {
  .theme {
    background: #313538;
    .theme-select .card {
      background: #292b2d;
      box-shadow: 0 0 4px -1px #fff;
    }
  }
  .pay {
    background: #313538;
    .logo:before, .logo:after {
      background:#666;
    }
  }
}
